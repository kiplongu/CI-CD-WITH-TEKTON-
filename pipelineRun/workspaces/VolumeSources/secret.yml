# secret
# In Kubernetes, a secret is used to store sensitive information like passwords, OAuth tokens, and ssh keys. It’s similar to ConfigMap, but tailored for confidential data. In Tekton, handling sensitive information in a secure manner is paramount. Tasks within the pipeline might need access to private repositories, API keys, database credentials, etc., and Kubernetes Secrets provide a secure mechanism to make this data available to the tasks without exposing it unnecessarily.

# However, using a Secret as a VolumeSource in Tekton has a few constraints:

# Read-Only: The Secret volume is mounted as read-only, meaning the data can be accessed but not modified by the tasks, ensuring the confidentiality and integrity of the secret data.
# Pre-Creation Requirement: The secret should be created and available in the cluster before the TaskRun or PipelineRun is executed. It’s not created dynamically during the run.
# Size Limit: Kubernetes Secrets have a size limit of 1MB, meaning the total size of the Secret’s data cannot exceed this limit.
# Let’s suppose you have a pipeline that deploys an application to a production environment. The deployment task needs credentials to push the application image to a private container registry. These credentials are stored as a Kubernetes Secret, and the task accesses them by mounting the Secret as a volume.

# Below is an example of declaring a secret volume source in the Workspace:

workspaces:
  - name: cred-workspace
    secret:
      secretName: registry-credentials

# The secret registry-credentials is created beforehand containing the encoded credentials needed to access the private container registry. The Tekton pipeline is configured with a workspace named cred-workspace, mapped to the registry-credentials secret. Tasks needing the credentials will use this workspace to access them. Tasks can read the registry credentials from this workspace, but can’t alter them, ensuring that sensitive data remains secure.